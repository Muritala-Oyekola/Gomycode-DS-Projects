{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPs+Ljo6zDrD7u7YJXLNDjO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EvoLTx16bEkD","executionInfo":{"status":"ok","timestamp":1717792880960,"user_tz":-60,"elapsed":681,"user":{"displayName":"Muritala Oyekola","userId":"12223748359470894601"}},"outputId":"76f86d6e-b5c5-481c-d494-baa5319d9d6e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["3000.0"]},"metadata":{},"execution_count":1}],"source":["class Account:\n","    def __init__(self, account_number, account_balance, account_holder):\n","        self.account_number = str(account_number)\n","        self.account_balance = float(account_balance)\n","        self.account_holder = str(account_holder)\n","    def deposit(self, amount):\n","        self.account_balance = self.account_balance + float(amount)\n","        return self.account_balance\n","    def withdrawal(self, amount):\n","        if self.account_balance > float(amount):\n","            self.account_balance = self.account_balance - float(amount)\n","            return self.account_balance\n","    def check_balance(self):\n","        return self.account_balance\n","\n","customer1 = Account(556789005, 5000, 'Jacob')\n","customer1.deposit(6000)\n","customer1.withdrawal(8000)\n","customer1.check_balance()\n"]}]}